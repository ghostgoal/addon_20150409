<?php
class class_cache
{
	protected $m_class_session;
	protected $m_cache_factory;
	
	function __construct($class_session,$class_config)
	{
		$this->m_class_session = $class_session;
		$this->m_cache_factory = new class_modelFactory($class_config->getCacheModel(),$class_query);
	}
	
	function getCacheSession()
	{
		return $this->m_class_session;
	}
	
	function getCacheModel($name)
	{
		return $this->m_cache_factory->createModel($name);
	}
	
	function getCacheID($id)
	{
		return md5($id);
	}
	
	function getCacheTimeout($name)
	{
		
	}
	
	function getRequestCacheID($user,$request)
	{
		$uid = $user->['ID'];
		$json = $request->toJSON();
		
		$fmt = "%s@$s";
		
		return $this->getCacheID(sprintf($fmt,$uid,$json));
	}
	
	function cacheQuery($table,$query,$result)
	{
		$cache = $this->getCacheModel('query');
		$cache->['ID'] = $this->getCacheID($query);
		$cache->['TID'] =$table;
		$cache->['RESULT'] = $result;
		
		return $this->getCacheSession()->save($cache);
		
	}
	function getQueryCache($table,$query)
	{
		$cache = $this->getCacheModel('query');
		if($this->getCacheSession()->load($cache,$this->getCacheID($query)))
		{
			return $cache->['RESULT'];
		}
		return false;
		
		
	}
	function cleanQueryCache($table)
	{
		$cache = $this->getCacheModel('query');
		$fmt = 'where TID="%s"';
		$where = sprintf($fmt,$table);
		return $this->m_class_session->delete($cache,$where);
	}
	function updateQueryCache($timeout)
	{
		$cache = $this->getCacheModel('query');
		$fmt =  'where unix_timestamp(time) + %s < unix_timestamp()';
		$where = sprintf($fmt,$timeout);
		return $this->getCacheSession()->delete($cache,$where);
	}
	function cacheRequest($user,$request,$response)
	{
		$cache = $this->getCacheModel('request');
		$cache->['ID'] = $this->getRequestCacheID($user,$request);
		$cache->['UID'] = $user->['ID'];
		$cache->['REQUEST'] = $request->toJSON();
		$cache->['RESPONSE'] = $response->toJSON();
		
		return $this->getCacheSession()->save($cache);
	}
	function getRequestCache($user,$request)
	{
		$cache = $this->getCacheModel('request');
		$id = $this->getRequestCacheID($user,$request)
		
		if($this->getCacheSession()->load($cache,$id))
		{
			return $cache->['RESPONSE'];
		}
		return false
		
		
	}
	function cleanRequestCache()
	{
		$cache = $this->getCacheModel('request');
	
		$where = "";
		return $this->m_class_session->delete($cache,$where);
	}
	function updateRequestCache()
	{
		$cache = $this->getCacheModel('request');
		$fmt =  'where unix_timestamp(time) + %s < unix_timestamp()';
		$where = sprintf($fmt,$timeout);
		return $this->getCacheSession()->delete($cache,$where);
	}
	
}
?>